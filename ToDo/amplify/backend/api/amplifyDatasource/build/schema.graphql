enum ToDoPriority {
  low
  medium
  high
}

type ToDoItem {
  id: ID!
  priority: ToDoPriority
  text: String
  completed: Boolean
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelToDoItemConnection {
  items: [ToDoItem]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelToDoPriorityInput {
  eq: ToDoPriority
  ne: ToDoPriority
}

input ModelToDoItemFilterInput {
  id: ModelIDInput
  priority: ModelToDoPriorityInput
  text: ModelStringInput
  completed: ModelBooleanInput
  and: [ModelToDoItemFilterInput]
  or: [ModelToDoItemFilterInput]
  not: ModelToDoItemFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  syncToDoItems(filter: ModelToDoItemFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelToDoItemConnection
  getToDoItem(id: ID!): ToDoItem
  listToDoItems(filter: ModelToDoItemFilterInput, limit: Int, nextToken: String): ModelToDoItemConnection
}

input CreateToDoItemInput {
  id: ID
  priority: ToDoPriority
  text: String
  completed: Boolean
  _version: Int
}

input UpdateToDoItemInput {
  id: ID!
  priority: ToDoPriority
  text: String
  completed: Boolean
  _version: Int
}

input DeleteToDoItemInput {
  id: ID!
  _version: Int
}

type Mutation {
  createToDoItem(input: CreateToDoItemInput!, condition: ModelToDoItemConditionInput): ToDoItem
  updateToDoItem(input: UpdateToDoItemInput!, condition: ModelToDoItemConditionInput): ToDoItem
  deleteToDoItem(input: DeleteToDoItemInput!, condition: ModelToDoItemConditionInput): ToDoItem
}

input ModelToDoItemConditionInput {
  priority: ModelToDoPriorityInput
  text: ModelStringInput
  completed: ModelBooleanInput
  and: [ModelToDoItemConditionInput]
  or: [ModelToDoItemConditionInput]
  not: ModelToDoItemConditionInput
}

type Subscription {
  onCreateToDoItem: ToDoItem @aws_subscribe(mutations: ["createToDoItem"])
  onUpdateToDoItem: ToDoItem @aws_subscribe(mutations: ["updateToDoItem"])
  onDeleteToDoItem: ToDoItem @aws_subscribe(mutations: ["deleteToDoItem"])
}
